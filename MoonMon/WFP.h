#pragma once
#include <ntifs.h>
#define NTSTRSAFE_LIB
#include <ntstrsafe.h>
#include <ntdef.h>
#include <wdm.h>
#include <fwpmk.h>
#include <fwpsk.h>
#include <fwpmtypes.h>

#include "DataTypes.h"
#include "Utils.h"

FWPM_PROVIDER* provider;

// {CD1005AE-8E72-4102-9EAF-963ED3F52887}
DEFINE_GUID(MM_WFP_PROVIDER,
    0xcd1005ae, 0x8e72, 0x4102, 0x9e, 0xaf, 0x96, 0x3e, 0xd3, 0xf5, 0x28, 0x87);

// {927FDD87-95A9-49B3-8E19-02A6C863F14B}
DEFINE_GUID(MM_INSPECTION_SUBLAYER,
    0x927fdd87, 0x95a9, 0x49b3, 0x8e, 0x19, 0x2, 0xa6, 0xc8, 0x63, 0xf1, 0x4b);

/* Callouts */

// {1D5182BF-81FF-4529-A467-48110CC487BB}
DEFINE_GUID(MM_CALLOUT_V4,
    0x1d5182bf, 0x81ff, 0x4529, 0xa4, 0x67, 0x48, 0x11, 0xc, 0xc4, 0x87, 0xbb);

// {188EBCAB-67A9-4B8E-A254-92196D4442A3}
DEFINE_GUID(MM_CALLOUT_V6,
    0x188ebcab, 0x67a9, 0x4b8e, 0xa2, 0x54, 0x92, 0x19, 0x6d, 0x44, 0x42, 0xa3);

// {616D1294-20A4-427B-95D4-8785915EDFF7}
DEFINE_GUID(MM_CALLOUT_UDP_V4,
    0x616d1294, 0x20a4, 0x427b, 0x95, 0xd4, 0x87, 0x85, 0x91, 0x5e, 0xdf, 0xf7);

// {954DBB7B-656A-487E-97FB-0BDE01C9B813}
DEFINE_GUID(MM_CALLOUT_UDP_V6,
    0x954dbb7b, 0x656a, 0x487e, 0x97, 0xfb, 0xb, 0xde, 0x1, 0xc9, 0xb8, 0x13);

// {031A4EF5-97FA-490E-9F74-729D40C107EE}
DEFINE_GUID(MM_CALLOUT_ACCEPT_V4,
    0x31a4ef5, 0x97fa, 0x490e, 0x9f, 0x74, 0x72, 0x9d, 0x40, 0xc1, 0x7, 0xee);

// {CC0E9769-A925-489F-99B5-BC21BD97B2E4}
DEFINE_GUID(MM_CALLOUT_ACCEPT_V6,
    0xcc0e9769, 0xa925, 0x489f, 0x99, 0xb5, 0xbc, 0x21, 0xbd, 0x97, 0xb2, 0xe4);

// {84E33137-386C-498C-A37D-DCA12BFD30C9}
DEFINE_GUID(MM_CALLOUT_LISTEN_V4,
    0x84e33137, 0x386c, 0x498c, 0xa3, 0x7d, 0xdc, 0xa1, 0x2b, 0xfd, 0x30, 0xc9);

// {2A491DF3-45D1-45FE-84D4-96DFCBD94A66}
DEFINE_GUID(MM_CALLOUT_LISTEN_V6 ,
    0x2a491df3, 0x45d1, 0x45fe, 0x84, 0xd4, 0x96, 0xdf, 0xcb, 0xd9, 0x4a, 0x66);

// {B3EA2DDC-BB89-40C2-B11C-E711A7A8D649}
DEFINE_GUID(MM_CALLOUT_RESOURCE_ASSIGNMENT_V4 ,
    0xb3ea2ddc, 0xbb89, 0x40c2, 0xb1, 0x1c, 0xe7, 0x11, 0xa7, 0xa8, 0xd6, 0x49);

// {F4C8452D-A7B8-4940-8209-8BBE891FEAAF}
DEFINE_GUID(MM_CALLOUT_RESOURCE_ASSIGNMENT_V6,
    0xf4c8452d, 0xa7b8, 0x4940, 0x82, 0x9, 0x8b, 0xbe, 0x89, 0x1f, 0xea, 0xaf);

// {ECCF87C3-5414-4A15-B336-B0926705B58D}
DEFINE_GUID(MM_CALLOUT_DNS_CACHE_V4,
    0xeccf87c3, 0x5414, 0x4a15, 0xb3, 0x36, 0xb0, 0x92, 0x67, 0x5, 0xb5, 0x8d);

// {4E4C73D1-8A81-4C17-AE8B-FCF1EF88BD9C}
DEFINE_GUID(MM_CALLOUT_DNS_CACHE_V6 ,
    0x4e4c73d1, 0x8a81, 0x4c17, 0xae, 0x8b, 0xfc, 0xf1, 0xef, 0x88, 0xbd, 0x9c);


/* Filters */

#define MM_FILTER_V4_ID 0x90
#define MM_FILTER_V6_ID 0x91
#define MM_FILTER_UDP_V4_ID 0x92
#define MM_FILTER_UDP_V6_ID 0x93
#define MM_FILTER_ACCEPT_V4_ID 0x94
#define MM_FILTER_ACCEPT_V6_ID 0x95
#define MM_FILTER_LISTEN_V4_ID 0x96
#define MM_FILTER_LISTEN_V6_ID 0x97
#define MM_FILTER_RESOURCE_ASSIGNMENT_V4_ID 0x98
#define MM_FILTER_RESOURCE_ASSIGNMENT_V6_ID 0x99
#define MM_FILTER_DNS_CACHE_V4_ID 0x9a
#define MM_FILTER_DNS_CACHE_V6_ID 0x9b


// {9AE6B84E-7EC0-415B-BF8D-31AFEA5D7164}
DEFINE_GUID(MM_FILTER_V4,
    0x9ae6b84e, 0x7ec0, 0x415b, 0xbf, 0x8d, 0x31, 0xaf, 0xea, 0x5d, 0x71, 0x64);

// {02869DBE-3778-4757-A07E-6D2479DE9A17}
DEFINE_GUID(MM_FILTER_V6,
    0x2869dbe, 0x3778, 0x4757, 0xa0, 0x7e, 0x6d, 0x24, 0x79, 0xde, 0x9a, 0x17);

// {08BC449F-90F9-4D25-B06D-7AE7526FB01F}
DEFINE_GUID(MM_FILTER_UDP_V4 ,
    0x8bc449f, 0x90f9, 0x4d25, 0xb0, 0x6d, 0x7a, 0xe7, 0x52, 0x6f, 0xb0, 0x1f);

// {C288A8CF-0482-4C6A-B428-2D9E0800808B}
DEFINE_GUID(MM_FILTER_UDP_V6,
    0xc288a8cf, 0x482, 0x4c6a, 0xb4, 0x28, 0x2d, 0x9e, 0x8, 0x0, 0x80, 0x8b);

// {DB8EE785-013A-400A-8B98-C0274318CF70}
DEFINE_GUID(MM_FILTER_ACCEPT_V4,
    0xdb8ee785, 0x13a, 0x400a, 0x8b, 0x98, 0xc0, 0x27, 0x43, 0x18, 0xcf, 0x70);

// {43C8F257-7301-4130-8333-50608C8335CE}
DEFINE_GUID(MM_FILTER_ACCEPT_V6 ,
    0x43c8f257, 0x7301, 0x4130, 0x83, 0x33, 0x50, 0x60, 0x8c, 0x83, 0x35, 0xce);

// {BC843556-F907-453A-8299-48638F936521}
DEFINE_GUID(MM_FILTER_LISTEN_V4,
    0xbc843556, 0xf907, 0x453a, 0x82, 0x99, 0x48, 0x63, 0x8f, 0x93, 0x65, 0x21);


// {AE71B1C0-EF7C-4360-987C-8E7DC1C37481}
DEFINE_GUID(MM_FILTER_LISTEN_V6,
    0xae71b1c0, 0xef7c, 0x4360, 0x98, 0x7c, 0x8e, 0x7d, 0xc1, 0xc3, 0x74, 0x81);


// {2227B848-2270-41ED-8A7C-154BA43F56B0}
DEFINE_GUID(MM_FILTER_RESOURCE_ASSIGNMENT_V4 ,
    0x2227b848, 0x2270, 0x41ed, 0x8a, 0x7c, 0x15, 0x4b, 0xa4, 0x3f, 0x56, 0xb0);

// {BBB5355A-C8C5-4CEC-9317-4C5FCC6DC394}
DEFINE_GUID(MM_FILTER_RESOURCE_ASSIGNMENT_V6,
    0xbbb5355a, 0xc8c5, 0x4cec, 0x93, 0x17, 0x4c, 0x5f, 0xcc, 0x6d, 0xc3, 0x94);

// {ED756D08-120B-41FE-889A-2E2A76D90014}
DEFINE_GUID(MM_FILTER_DNS_CACHE_V4 ,
    0xed756d08, 0x120b, 0x41fe, 0x88, 0x9a, 0x2e, 0x2a, 0x76, 0xd9, 0x0, 0x14);

// {EB0847A3-31D4-4F60-92F4-B680ABEBC3C2}
DEFINE_GUID(MM_FILTER_DNS_CACHE_V6,
    0xeb0847a3, 0x31d4, 0x4f60, 0x92, 0xf4, 0xb6, 0x80, 0xab, 0xeb, 0xc3, 0xc2);



typedef struct calloutRegistration {
    GUID applicableLayer;
    GUID calloutKey;
    WCHAR* name;
    WCHAR* description;
    GUID  providerKey;
} MM_CALLOUTS;

typedef struct registrationFilters {
    GUID filterKey;
    GUID providerKey;
    PWCHAR filterName;
    UINT8 weight;
    FWP_DATA_TYPE weight_type;
    GUID layerKey;
    FWP_ACTION_TYPE action_type;
    GUID callout_key;
    GUID sublayer_key;
    PWCHAR sublayerName;
    UINT32 sublayer_flags;
    UINT16 sublayer_weight;
    UINT64 id;

} MM_FILTERS;

NTSTATUS SetupWFP(_In_ PGC globals, _In_ FWPS_CALLOUT_NOTIFY_FN NetNotifyCallback, _In_ FWPS_CALLOUT_CLASSIFY_FN NetClassifyCallback);
void UnregisterWFP(_In_ PGC globals);
void InspectNetworkEvent(_In_ PGC globals, _In_ PWFP_INFO NI, _In_ BOOLEAN littleEndian, _Out_ PBOOLEAN skip_logging, _Out_ PULONG match_id);